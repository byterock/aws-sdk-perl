[%- operation = c.operation(op_name) %]
[%- shape = c.input_for_operation(op_name) %]
package [% c.api %]::[% op_name %];
  use Moose;

[% SET include_vars.stream_param = '' -%]
[% SET include_vars.namsepace_uri = '' -%]

[% INCLUDE shape_attributes.tt source="callargs" -%]
  has ContentMD5 => (is => 'ro', isa => 'Str', header_name => 'Content-MD5', auto => 'MD5', traits => ['AutoInHeader'] );
  
  use MooseX::ClassAttribute;
  [%- IF namespace_uri %]
  class_has _namespace_uri => (isa => 'Str', is => 'ro', default => '[% namespace_uri %]');[% END %]
  class_has _api_call => (isa => 'Str', is => 'ro', default => '[% op_name %]');
  class_has _api_uri  => (isa => 'Str', is => 'ro', default => '[% operation.http.requestUri %]');
  class_has _api_method  => (isa => 'Str', is => 'ro', default => '[% operation.http.method %]');
  class_has _returns => (isa => 'Str', is => 'ro', default => '
    [%- IF (operation.output.keys.size) -%]
      [%- c.api %]::[% c.shapename_for_operation_output(op_name) -%]
    [%- ELSE -%]Paws::API::Response[% END -%]');
  class_has _result_key => (isa => 'Str', is => 'ro');
  [% IF (include_vars.stream_param) %]class_has _stream_param => (is => 'ro', default => '[% c.to_payload_shape_name(include_vars.stream_param) %]');[% END %]
  [%- IF shape.locationName -%] class_has _top_level_element     => (isa => 'Str', is => 'ro', default => '[% shape.locationName %]');[% END %]
  [%  IF shape.xmlNamespace -%] class_has _top_level_namespace   => (isa => 'Str', is => 'ro', default => '[% shape.xmlNamespace.uri %]');[%- END %]  
  [%  IF (include_vars.namsepace_uri) %] class_has _namspace_uri => (isa => 'Str', is => 'ro', default => '[%include_vars.namsepace_uri %]');[% END %]
 
1;

[% INCLUDE 'callclass_documentation.tt' %]
